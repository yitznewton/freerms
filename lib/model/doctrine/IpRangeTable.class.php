<?php

/**
 * IpRangeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class IpRangeTable extends Doctrine_Table
{
  /**
   * Find IpRanges that intersect with the given IpRange
   *
   * Available options:
   *  * include_inactive: include IpRanges marked as inactive
   *    (default false)
   *
   * @param IpRange $ipRange
   * @param array $options
   * @return Doctrine_Collection
   */
  public function findIntersecting(IpRange $ipRange, $options = array())
  {
    // algorithm explained at
    // http://stackoverflow.com/questions/143552/comparing-date-ranges
    $q = IpRangeTable::getInstance()->createQuery('i')
      ->where('i.start_ip_sort <= ?', $ipRange->getEndIpSort())
      ->andWhere('i.end_ip_sort >= ?', $ipRange->getStartIpSort())
      ->orderBy('i.start_ip_sort ASC')
      ->addOrderBy('i.end_ip_sort ASC')
      ;

    if ($ipRange->getId()) {
      $q->andWhere('i.id != ?', $ipRange->getId());
    }

    if (
      !isset($options['include_inactive'])
      || $options['include_inactive'] !== true
    ) {
      $q->andWhere('i.is_active = true');
    }

    return $q->execute();
  }

  /**
   * Finds IpRanges based on initial segment; e.g. '192.168'
   *
   * @param string $segment
   * @return Doctrine_Collection
   */
  public function findByIpSegment($segment)
  {
    $sortString   = IpRange::createSortString($segment);
    $stringLength = strlen($sortString);

    $q = IpRangeTable::getInstance()->createQuery('i')
      ->where("SUBSTRING(i.start_ip_sort, 1, $stringLength) <= ?", $sortString)
      ->andWhere("SUBSTRING(i.end_ip_sort, 1, $stringLength) >= ?", $sortString)
      ->orderBy('i.start_ip_sort ASC')
      ->addOrderBy('i.end_ip_sort ASC')
      ;

    return $q->execute();
  }

  /**
  * Returns an instance of this class.
  *
  * @return object IpRangeTable
  */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('IpRange');
  }
}

