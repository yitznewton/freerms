<?php


/**
 * This class adds structure of 'admin_infos' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Jul 21 11:41:56 2009
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class AdminInfoMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.AdminInfoMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(AdminInfoPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(AdminInfoPeer::TABLE_NAME);
		$tMap->setPhpName('AdminInfo');
		$tMap->setClassname('AdminInfo');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, null);

		$tMap->addColumn('UI_CONFIG_AVAILABLE', 'UiConfigAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('SUBSCRIBER_BRANDING_AVAILABLE', 'SubscriberBrandingAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('SUBSCRIBER_BRANDING_NOTE', 'SubscriberBrandingNote', 'LONGVARCHAR', false, null);

		$tMap->addColumn('PERSONALIZED_FEATURES_AVAILABLE', 'PersonalizedFeaturesAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('INBOUND_LINKING_AVAILABLE', 'InboundLinkingAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('OPEN_URL_COMPLIANCE_AVAILABLE', 'OpenUrlComplianceAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('LINKING_NOTE', 'LinkingNote', 'LONGVARCHAR', false, null);

		$tMap->addColumn('MARC_RECORDS_AVAILABLE', 'MarcRecordsAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('MARC_RECORD_NOTE', 'MarcRecordNote', 'LONGVARCHAR', false, null);

		$tMap->addColumn('SS_360_SEARCH_AVAILABLE', 'Ss360SearchAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('USAGE_STATS_AVAILABLE', 'UsageStatsAvailable', 'BOOLEAN', false, null);

		$tMap->addColumn('USAGE_STATS_STANDARDS_COMPLIANCE', 'UsageStatsStandardsCompliance', 'VARCHAR', false, 50);

		$tMap->addForeignKey('USAGE_STATS_DELIVERY_ID', 'UsageStatsDeliveryId', 'INTEGER', 'info_exchange_methods', 'ID', false, null);

		$tMap->addForeignKey('USAGE_STATS_FORMAT_ID', 'UsageStatsFormatId', 'INTEGER', 'usage_stats_formats', 'ID', false, null);

		$tMap->addForeignKey('USAGE_STATS_FREQ_ID', 'UsageStatsFreqId', 'INTEGER', 'usage_stats_freqs', 'ID', false, null);

		$tMap->addColumn('USAGE_STATS_URI', 'UsageStatsUri', 'VARCHAR', false, 255);

		$tMap->addColumn('USAGE_STATS_USERNAME', 'UsageStatsUsername', 'VARCHAR', false, 25);

		$tMap->addColumn('USAGE_STATS_PASSWORD', 'UsageStatsPassword', 'VARCHAR', false, 25);

		$tMap->addColumn('USAGE_STATS_NOTE', 'UsageStatsNote', 'LONGVARCHAR', false, null);

		$tMap->addColumn('SOFTWARE_REQUIREMENTS', 'SoftwareRequirements', 'LONGVARCHAR', false, null);

		$tMap->addColumn('SYSTEM_STATUS_URI', 'SystemStatusUri', 'VARCHAR', false, 255);

		$tMap->addColumn('PRODUCT_ADVISORY_NOTE', 'ProductAdvisoryNote', 'LONGVARCHAR', false, null);

		$tMap->addColumn('TRAINING_INFO', 'TrainingInfo', 'LONGVARCHAR', false, null);

		$tMap->addColumn('ADMIN_DOC_URI', 'AdminDocUri', 'VARCHAR', false, 255);

		$tMap->addColumn('USER_DOC_URI', 'UserDocUri', 'VARCHAR', false, 255);

		$tMap->addColumn('NOTE', 'Note', 'LONGVARCHAR', false, null);

		$tMap->addColumn('DELETED_AT', 'DeletedAt', 'TIMESTAMP', false, null);

	} // doBuild()

} // AdminInfoMapBuilder
